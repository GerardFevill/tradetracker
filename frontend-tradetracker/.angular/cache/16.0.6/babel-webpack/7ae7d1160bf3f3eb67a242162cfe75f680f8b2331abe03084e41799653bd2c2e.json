{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/analytics.service\";\nimport * as i3 from \"@angular/common\";\nfunction SettingsComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵtext(1, \" Le taux doit \\u00EAtre sup\\u00E9rieur \\u00E0 0. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SettingsComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵtext(1, \" Le taux doit \\u00EAtre sup\\u00E9rieur \\u00E0 0. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SettingsComponent_div_68_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵtext(1, \" Le montant doit \\u00EAtre positif ou nul. \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"invalid\": a0\n  };\n};\nclass SettingsComponent {\n  constructor(fb, analyticsService) {\n    this.fb = fb;\n    this.analyticsService = analyticsService;\n  }\n  ngOnInit() {\n    this.initForms();\n  }\n  initForms() {\n    // Exchange rate form\n    this.exchangeRateForm = this.fb.group({\n      eurToUsd: [1.1, [Validators.required, Validators.min(0.01)]],\n      usdToEur: [0.91, [Validators.required, Validators.min(0.01)]]\n    });\n    // Display settings form\n    this.displaySettingsForm = this.fb.group({\n      defaultCurrency: ['USD', Validators.required],\n      showPerformanceMetrics: [true],\n      enableDarkMode: [false]\n    });\n    // Withdrawal rules form\n    this.withdrawalRulesForm = this.fb.group({\n      autoSuggestWithdrawals: [true],\n      minWithdrawalAmount: [100, [Validators.required, Validators.min(0)]],\n      keepPercentageOfProfit: [50, [Validators.required, Validators.min(0), Validators.max(100)]]\n    });\n  }\n  updateExchangeRates() {\n    if (this.exchangeRateForm.invalid) return;\n    const {\n      eurToUsd,\n      usdToEur\n    } = this.exchangeRateForm.value;\n    this.analyticsService.setExchangeRates(eurToUsd, usdToEur);\n    // In a real app, we would save this to the backend\n    this.showSuccessMessage('Taux de change mis à jour avec succès');\n  }\n  updateDisplaySettings() {\n    if (this.displaySettingsForm.invalid) return;\n    // In a real app, we would save this to the backend and apply the settings\n    this.showSuccessMessage('Paramètres d\\'affichage mis à jour avec succès');\n  }\n  updateWithdrawalRules() {\n    if (this.withdrawalRulesForm.invalid) return;\n    // In a real app, we would save this to the backend\n    this.showSuccessMessage('Règles de retrait mises à jour avec succès');\n  }\n  showSuccessMessage(message) {\n    // In a real app, we would use a proper notification system\n    alert(message);\n  }\n  static {\n    this.ɵfac = function SettingsComponent_Factory(t) {\n      return new (t || SettingsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AnalyticsService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SettingsComponent,\n      selectors: [[\"app-settings\"]],\n      decls: 81,\n      vars: 19,\n      consts: [[1, \"settings-container\"], [1, \"header\"], [1, \"settings-section\"], [1, \"card\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-row\"], [1, \"form-group\"], [\"for\", \"eurToUsd\"], [\"type\", \"number\", \"id\", \"eurToUsd\", \"formControlName\", \"eurToUsd\", \"step\", \"0.01\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"for\", \"usdToEur\"], [\"type\", \"number\", \"id\", \"usdToEur\", \"formControlName\", \"usdToEur\", \"step\", \"0.01\", 1, \"form-control\", 3, \"ngClass\"], [1, \"help-text\"], [1, \"form-actions\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"for\", \"defaultCurrency\"], [\"id\", \"defaultCurrency\", \"formControlName\", \"defaultCurrency\", 1, \"form-control\"], [\"value\", \"USD\"], [\"value\", \"EUR\"], [1, \"form-group\", \"checkbox-group\"], [1, \"checkbox-item\"], [\"type\", \"checkbox\", \"id\", \"showPerformanceMetrics\", \"formControlName\", \"showPerformanceMetrics\"], [\"for\", \"showPerformanceMetrics\"], [\"type\", \"checkbox\", \"id\", \"enableDarkMode\", \"formControlName\", \"enableDarkMode\"], [\"for\", \"enableDarkMode\"], [\"type\", \"checkbox\", \"id\", \"autoSuggestWithdrawals\", \"formControlName\", \"autoSuggestWithdrawals\"], [\"for\", \"autoSuggestWithdrawals\"], [\"for\", \"minWithdrawalAmount\"], [\"type\", \"number\", \"id\", \"minWithdrawalAmount\", \"formControlName\", \"minWithdrawalAmount\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"keepPercentageOfProfit\"], [1, \"range-input-container\"], [\"type\", \"range\", \"id\", \"keepPercentageOfProfit\", \"formControlName\", \"keepPercentageOfProfit\", \"min\", \"0\", \"max\", \"100\", \"step\", \"5\", 1, \"range-input\"], [1, \"range-value\"], [1, \"error-message\"]],\n      template: function SettingsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n          i0.ɵɵtext(3, \"Param\\u00E8tres\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"h3\");\n          i0.ɵɵtext(6, \"Taux de Change\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"div\", 3)(8, \"div\", 4)(9, \"form\", 5);\n          i0.ɵɵlistener(\"ngSubmit\", function SettingsComponent_Template_form_ngSubmit_9_listener() {\n            return ctx.updateExchangeRates();\n          });\n          i0.ɵɵelementStart(10, \"div\", 6)(11, \"div\", 7)(12, \"label\", 8);\n          i0.ɵɵtext(13, \"EUR \\u2192 USD\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(14, \"input\", 9);\n          i0.ɵɵtemplate(15, SettingsComponent_div_15_Template, 2, 0, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"div\", 7)(17, \"label\", 11);\n          i0.ɵɵtext(18, \"USD \\u2192 EUR\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(19, \"input\", 12);\n          i0.ɵɵtemplate(20, SettingsComponent_div_20_Template, 2, 0, \"div\", 10);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(21, \"div\", 13);\n          i0.ɵɵtext(22, \" Ces taux sont utilis\\u00E9s pour convertir les devises lors de l'affichage des totaux. \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"div\", 14)(24, \"button\", 15);\n          i0.ɵɵtext(25, \"Mettre \\u00E0 jour\");\n          i0.ɵɵelementEnd()()()()()();\n          i0.ɵɵelementStart(26, \"div\", 2)(27, \"h3\");\n          i0.ɵɵtext(28, \"Affichage\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"div\", 3)(30, \"div\", 4)(31, \"form\", 5);\n          i0.ɵɵlistener(\"ngSubmit\", function SettingsComponent_Template_form_ngSubmit_31_listener() {\n            return ctx.updateDisplaySettings();\n          });\n          i0.ɵɵelementStart(32, \"div\", 7)(33, \"label\", 16);\n          i0.ɵɵtext(34, \"Devise par d\\u00E9faut\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(35, \"select\", 17)(36, \"option\", 18);\n          i0.ɵɵtext(37, \"USD\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(38, \"option\", 19);\n          i0.ɵɵtext(39, \"EUR\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(40, \"div\", 20)(41, \"div\", 21);\n          i0.ɵɵelement(42, \"input\", 22);\n          i0.ɵɵelementStart(43, \"label\", 23);\n          i0.ɵɵtext(44, \"Afficher les m\\u00E9triques de performance\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(45, \"div\", 20)(46, \"div\", 21);\n          i0.ɵɵelement(47, \"input\", 24);\n          i0.ɵɵelementStart(48, \"label\", 25);\n          i0.ɵɵtext(49, \"Activer le mode sombre\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(50, \"div\", 14)(51, \"button\", 15);\n          i0.ɵɵtext(52, \"Enregistrer\");\n          i0.ɵɵelementEnd()()()()()();\n          i0.ɵɵelementStart(53, \"div\", 2)(54, \"h3\");\n          i0.ɵɵtext(55, \"R\\u00E8gles de Retrait Automatique\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(56, \"div\", 3)(57, \"div\", 4)(58, \"form\", 5);\n          i0.ɵɵlistener(\"ngSubmit\", function SettingsComponent_Template_form_ngSubmit_58_listener() {\n            return ctx.updateWithdrawalRules();\n          });\n          i0.ɵɵelementStart(59, \"div\", 20)(60, \"div\", 21);\n          i0.ɵɵelement(61, \"input\", 26);\n          i0.ɵɵelementStart(62, \"label\", 27);\n          i0.ɵɵtext(63, \"Sugg\\u00E9rer automatiquement les retraits\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(64, \"div\", 7)(65, \"label\", 28);\n          i0.ɵɵtext(66, \"Montant minimum de retrait\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(67, \"input\", 29);\n          i0.ɵɵtemplate(68, SettingsComponent_div_68_Template, 2, 0, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(69, \"div\", 7)(70, \"label\", 30);\n          i0.ɵɵtext(71, \"Pourcentage des profits \\u00E0 conserver\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(72, \"div\", 31);\n          i0.ɵɵelement(73, \"input\", 32);\n          i0.ɵɵelementStart(74, \"span\", 33);\n          i0.ɵɵtext(75);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(76, \"div\", 13);\n          i0.ɵɵtext(77, \" Pourcentage des profits \\u00E0 conserver dans le compte apr\\u00E8s avoir atteint l'objectif. \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(78, \"div\", 14)(79, \"button\", 15);\n          i0.ɵɵtext(80, \"Enregistrer\");\n          i0.ɵɵelementEnd()()()()()()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          let tmp_2_0;\n          let tmp_3_0;\n          let tmp_4_0;\n          let tmp_9_0;\n          let tmp_10_0;\n          let tmp_11_0;\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"formGroup\", ctx.exchangeRateForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c0, ((tmp_1_0 = ctx.exchangeRateForm.get(\"eurToUsd\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.exchangeRateForm.get(\"eurToUsd\")) == null ? null : tmp_1_0.touched)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.exchangeRateForm.get(\"eurToUsd\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.exchangeRateForm.get(\"eurToUsd\")) == null ? null : tmp_2_0.touched));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c0, ((tmp_3_0 = ctx.exchangeRateForm.get(\"usdToEur\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.exchangeRateForm.get(\"usdToEur\")) == null ? null : tmp_3_0.touched)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.exchangeRateForm.get(\"usdToEur\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.exchangeRateForm.get(\"usdToEur\")) == null ? null : tmp_4_0.touched));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"disabled\", ctx.exchangeRateForm.invalid);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"formGroup\", ctx.displaySettingsForm);\n          i0.ɵɵadvance(20);\n          i0.ɵɵproperty(\"disabled\", ctx.displaySettingsForm.invalid);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"formGroup\", ctx.withdrawalRulesForm);\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(17, _c0, ((tmp_9_0 = ctx.withdrawalRulesForm.get(\"minWithdrawalAmount\")) == null ? null : tmp_9_0.invalid) && ((tmp_9_0 = ctx.withdrawalRulesForm.get(\"minWithdrawalAmount\")) == null ? null : tmp_9_0.touched)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_10_0 = ctx.withdrawalRulesForm.get(\"minWithdrawalAmount\")) == null ? null : tmp_10_0.invalid) && ((tmp_10_0 = ctx.withdrawalRulesForm.get(\"minWithdrawalAmount\")) == null ? null : tmp_10_0.touched));\n          i0.ɵɵadvance(7);\n          i0.ɵɵtextInterpolate1(\"\", (tmp_11_0 = ctx.withdrawalRulesForm.get(\"keepPercentageOfProfit\")) == null ? null : tmp_11_0.value, \"%\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"disabled\", ctx.withdrawalRulesForm.invalid);\n        }\n      },\n      dependencies: [i3.NgClass, i3.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.RangeValueAccessor, i1.CheckboxControlValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\".settings-container[_ngcontent-%COMP%] {\\n  padding: 20px;\\n}\\n\\n.header[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n}\\n\\n.header[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  margin: 0;\\n}\\n\\n.settings-section[_ngcontent-%COMP%] {\\n  margin-bottom: 30px;\\n}\\n\\n.settings-section[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n  margin-bottom: 15px;\\n}\\n\\n.card[_ngcontent-%COMP%] {\\n  background-color: #fff;\\n  border-radius: 8px;\\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\\n  overflow: hidden;\\n}\\n\\n.card-body[_ngcontent-%COMP%] {\\n  padding: 20px;\\n}\\n\\n.form-row[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: 1fr 1fr;\\n  gap: 20px;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n}\\n\\n.form-group[_ngcontent-%COMP%]:last-child {\\n  margin-bottom: 0;\\n}\\n\\n.form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  display: block;\\n  margin-bottom: 8px;\\n  font-weight: 500;\\n}\\n\\n.form-control[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 10px 12px;\\n  border: 1px solid #ced4da;\\n  border-radius: 4px;\\n  font-size: 16px;\\n}\\n\\n.form-control.invalid[_ngcontent-%COMP%] {\\n  border-color: #dc3545;\\n}\\n\\n.error-message[_ngcontent-%COMP%] {\\n  color: #dc3545;\\n  font-size: 14px;\\n  margin-top: 5px;\\n}\\n\\n.help-text[_ngcontent-%COMP%] {\\n  color: #6c757d;\\n  font-size: 14px;\\n  margin-top: 5px;\\n  margin-bottom: 15px;\\n}\\n\\n.checkbox-group[_ngcontent-%COMP%] {\\n  margin-top: 10px;\\n}\\n\\n.checkbox-item[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  margin-bottom: 10px;\\n}\\n\\n.checkbox-item[_ngcontent-%COMP%]:last-child {\\n  margin-bottom: 0;\\n}\\n\\n.checkbox-item[_ngcontent-%COMP%]   input[type=\\\"checkbox\\\"][_ngcontent-%COMP%] {\\n  margin-right: 10px;\\n}\\n\\n.range-input-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  gap: 15px;\\n}\\n\\n.range-input[_ngcontent-%COMP%] {\\n  flex: 1;\\n}\\n\\n.range-value[_ngcontent-%COMP%] {\\n  font-weight: 500;\\n  min-width: 40px;\\n  text-align: right;\\n}\\n\\n.form-actions[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: flex-end;\\n  margin-top: 20px;\\n}\\n\\n.btn[_ngcontent-%COMP%] {\\n  padding: 10px 20px;\\n  border-radius: 4px;\\n  font-weight: 500;\\n  cursor: pointer;\\n  border: none;\\n}\\n\\n.btn-primary[_ngcontent-%COMP%] {\\n  background-color: #007bff;\\n  color: white;\\n}\\n\\n.btn[_ngcontent-%COMP%]:disabled {\\n  opacity: 0.65;\\n  cursor: not-allowed;\\n}\\n\\n@media (max-width: 768px) {\\n  .form-row[_ngcontent-%COMP%] {\\n    grid-template-columns: 1fr;\\n    gap: 0;\\n  }\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9zZXR0aW5ncy9zZXR0aW5ncy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsU0FBUztBQUNYOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0Usc0JBQXNCO0VBQ3RCLGtCQUFrQjtFQUNsQix5Q0FBeUM7RUFDekMsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsYUFBYTtFQUNiLDhCQUE4QjtFQUM5QixTQUFTO0FBQ1g7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxjQUFjO0VBQ2Qsa0JBQWtCO0VBQ2xCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIseUJBQXlCO0VBQ3pCLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsY0FBYztFQUNkLGVBQWU7RUFDZixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsY0FBYztFQUNkLGVBQWU7RUFDZixlQUFlO0VBQ2YsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLFNBQVM7QUFDWDs7QUFFQTtFQUNFLE9BQU87QUFDVDs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixlQUFlO0VBQ2YsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsYUFBYTtFQUNiLHlCQUF5QjtFQUN6QixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixlQUFlO0VBQ2YsWUFBWTtBQUNkOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRTtJQUNFLDBCQUEwQjtJQUMxQixNQUFNO0VBQ1I7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi5zZXR0aW5ncy1jb250YWluZXIge1xuICBwYWRkaW5nOiAyMHB4O1xufVxuXG4uaGVhZGVyIHtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuLmhlYWRlciBoMiB7XG4gIG1hcmdpbjogMDtcbn1cblxuLnNldHRpbmdzLXNlY3Rpb24ge1xuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xufVxuXG4uc2V0dGluZ3Mtc2VjdGlvbiBoMyB7XG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XG59XG5cbi5jYXJkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBib3gtc2hhZG93OiAwIDJweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLmNhcmQtYm9keSB7XG4gIHBhZGRpbmc6IDIwcHg7XG59XG5cbi5mb3JtLXJvdyB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcbiAgZ2FwOiAyMHB4O1xufVxuXG4uZm9ybS1ncm91cCB7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbi5mb3JtLWdyb3VwOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4uZm9ybS1ncm91cCBsYWJlbCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tYm90dG9tOiA4cHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG5cbi5mb3JtLWNvbnRyb2wge1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMTBweCAxMnB4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjY2VkNGRhO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cblxuLmZvcm0tY29udHJvbC5pbnZhbGlkIHtcbiAgYm9yZGVyLWNvbG9yOiAjZGMzNTQ1O1xufVxuXG4uZXJyb3ItbWVzc2FnZSB7XG4gIGNvbG9yOiAjZGMzNTQ1O1xuICBmb250LXNpemU6IDE0cHg7XG4gIG1hcmdpbi10b3A6IDVweDtcbn1cblxuLmhlbHAtdGV4dCB7XG4gIGNvbG9yOiAjNmM3NTdkO1xuICBmb250LXNpemU6IDE0cHg7XG4gIG1hcmdpbi10b3A6IDVweDtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcbn1cblxuLmNoZWNrYm94LWdyb3VwIHtcbiAgbWFyZ2luLXRvcDogMTBweDtcbn1cblxuLmNoZWNrYm94LWl0ZW0ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuXG4uY2hlY2tib3gtaXRlbTpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxuLmNoZWNrYm94LWl0ZW0gaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdIHtcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xufVxuXG4ucmFuZ2UtaW5wdXQtY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZ2FwOiAxNXB4O1xufVxuXG4ucmFuZ2UtaW5wdXQge1xuICBmbGV4OiAxO1xufVxuXG4ucmFuZ2UtdmFsdWUge1xuICBmb250LXdlaWdodDogNTAwO1xuICBtaW4td2lkdGg6IDQwcHg7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4uZm9ybS1hY3Rpb25zIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgbWFyZ2luLXRvcDogMjBweDtcbn1cblxuLmJ0biB7XG4gIHBhZGRpbmc6IDEwcHggMjBweDtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBmb250LXdlaWdodDogNTAwO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJvcmRlcjogbm9uZTtcbn1cblxuLmJ0bi1wcmltYXJ5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uYnRuOmRpc2FibGVkIHtcbiAgb3BhY2l0eTogMC42NTtcbiAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5mb3JtLXJvdyB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XG4gICAgZ2FwOiAwO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}\nexport { SettingsComponent };","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","SettingsComponent","constructor","fb","analyticsService","ngOnInit","initForms","exchangeRateForm","group","eurToUsd","required","min","usdToEur","displaySettingsForm","defaultCurrency","showPerformanceMetrics","enableDarkMode","withdrawalRulesForm","autoSuggestWithdrawals","minWithdrawalAmount","keepPercentageOfProfit","max","updateExchangeRates","invalid","value","setExchangeRates","showSuccessMessage","updateDisplaySettings","updateWithdrawalRules","message","alert","ɵɵdirectiveInject","i1","FormBuilder","i2","AnalyticsService","selectors","decls","vars","consts","template","SettingsComponent_Template","rf","ctx","ɵɵlistener","SettingsComponent_Template_form_ngSubmit_9_listener","ɵɵelement","ɵɵtemplate","SettingsComponent_div_15_Template","SettingsComponent_div_20_Template","SettingsComponent_Template_form_ngSubmit_31_listener","SettingsComponent_Template_form_ngSubmit_58_listener","SettingsComponent_div_68_Template","ɵɵadvance","ɵɵproperty","ɵɵpureFunction1","_c0","tmp_1_0","get","touched","tmp_2_0","tmp_3_0","tmp_4_0","tmp_9_0","tmp_10_0","ɵɵtextInterpolate1","tmp_11_0"],"sources":["/home/vagrant/workspace/windsurf/tradetracker/frontend-tradetracker/src/app/components/settings/settings.component.ts","/home/vagrant/workspace/windsurf/tradetracker/frontend-tradetracker/src/app/components/settings/settings.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AnalyticsService } from '../../services/analytics.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n  exchangeRateForm!: FormGroup;\n  displaySettingsForm!: FormGroup;\n  withdrawalRulesForm!: FormGroup;\n  \n  constructor(\n    private fb: FormBuilder,\n    private analyticsService: AnalyticsService\n  ) {}\n\n  ngOnInit(): void {\n    this.initForms();\n  }\n  \n  private initForms(): void {\n    // Exchange rate form\n    this.exchangeRateForm = this.fb.group({\n      eurToUsd: [1.1, [Validators.required, Validators.min(0.01)]],\n      usdToEur: [0.91, [Validators.required, Validators.min(0.01)]]\n    });\n    \n    // Display settings form\n    this.displaySettingsForm = this.fb.group({\n      defaultCurrency: ['USD', Validators.required],\n      showPerformanceMetrics: [true],\n      enableDarkMode: [false]\n    });\n    \n    // Withdrawal rules form\n    this.withdrawalRulesForm = this.fb.group({\n      autoSuggestWithdrawals: [true],\n      minWithdrawalAmount: [100, [Validators.required, Validators.min(0)]],\n      keepPercentageOfProfit: [50, [Validators.required, Validators.min(0), Validators.max(100)]]\n    });\n  }\n  \n  updateExchangeRates(): void {\n    if (this.exchangeRateForm.invalid) return;\n    \n    const { eurToUsd, usdToEur } = this.exchangeRateForm.value;\n    this.analyticsService.setExchangeRates(eurToUsd, usdToEur);\n    \n    // In a real app, we would save this to the backend\n    this.showSuccessMessage('Taux de change mis à jour avec succès');\n  }\n  \n  updateDisplaySettings(): void {\n    if (this.displaySettingsForm.invalid) return;\n    \n    // In a real app, we would save this to the backend and apply the settings\n    this.showSuccessMessage('Paramètres d\\'affichage mis à jour avec succès');\n  }\n  \n  updateWithdrawalRules(): void {\n    if (this.withdrawalRulesForm.invalid) return;\n    \n    // In a real app, we would save this to the backend\n    this.showSuccessMessage('Règles de retrait mises à jour avec succès');\n  }\n  \n  private showSuccessMessage(message: string): void {\n    // In a real app, we would use a proper notification system\n    alert(message);\n  }\n}\n","<div class=\"settings-container\">\n  <div class=\"header\">\n    <h2>Paramètres</h2>\n  </div>\n  \n  <div class=\"settings-section\">\n    <h3>Taux de Change</h3>\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <form [formGroup]=\"exchangeRateForm\" (ngSubmit)=\"updateExchangeRates()\">\n          <div class=\"form-row\">\n            <div class=\"form-group\">\n              <label for=\"eurToUsd\">EUR → USD</label>\n              <input \n                type=\"number\" \n                id=\"eurToUsd\" \n                formControlName=\"eurToUsd\"\n                class=\"form-control\"\n                step=\"0.01\"\n                [ngClass]=\"{'invalid': exchangeRateForm.get('eurToUsd')?.invalid && exchangeRateForm.get('eurToUsd')?.touched}\"\n              >\n              <div class=\"error-message\" *ngIf=\"exchangeRateForm.get('eurToUsd')?.invalid && exchangeRateForm.get('eurToUsd')?.touched\">\n                Le taux doit être supérieur à 0.\n              </div>\n            </div>\n            \n            <div class=\"form-group\">\n              <label for=\"usdToEur\">USD → EUR</label>\n              <input \n                type=\"number\" \n                id=\"usdToEur\" \n                formControlName=\"usdToEur\"\n                class=\"form-control\"\n                step=\"0.01\"\n                [ngClass]=\"{'invalid': exchangeRateForm.get('usdToEur')?.invalid && exchangeRateForm.get('usdToEur')?.touched}\"\n              >\n              <div class=\"error-message\" *ngIf=\"exchangeRateForm.get('usdToEur')?.invalid && exchangeRateForm.get('usdToEur')?.touched\">\n                Le taux doit être supérieur à 0.\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"help-text\">\n            Ces taux sont utilisés pour convertir les devises lors de l'affichage des totaux.\n          </div>\n          \n          <div class=\"form-actions\">\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"exchangeRateForm.invalid\">Mettre à jour</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"settings-section\">\n    <h3>Affichage</h3>\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <form [formGroup]=\"displaySettingsForm\" (ngSubmit)=\"updateDisplaySettings()\">\n          <div class=\"form-group\">\n            <label for=\"defaultCurrency\">Devise par défaut</label>\n            <select id=\"defaultCurrency\" formControlName=\"defaultCurrency\" class=\"form-control\">\n              <option value=\"USD\">USD</option>\n              <option value=\"EUR\">EUR</option>\n            </select>\n          </div>\n          \n          <div class=\"form-group checkbox-group\">\n            <div class=\"checkbox-item\">\n              <input type=\"checkbox\" id=\"showPerformanceMetrics\" formControlName=\"showPerformanceMetrics\">\n              <label for=\"showPerformanceMetrics\">Afficher les métriques de performance</label>\n            </div>\n          </div>\n          \n          <div class=\"form-group checkbox-group\">\n            <div class=\"checkbox-item\">\n              <input type=\"checkbox\" id=\"enableDarkMode\" formControlName=\"enableDarkMode\">\n              <label for=\"enableDarkMode\">Activer le mode sombre</label>\n            </div>\n          </div>\n          \n          <div class=\"form-actions\">\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"displaySettingsForm.invalid\">Enregistrer</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"settings-section\">\n    <h3>Règles de Retrait Automatique</h3>\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <form [formGroup]=\"withdrawalRulesForm\" (ngSubmit)=\"updateWithdrawalRules()\">\n          <div class=\"form-group checkbox-group\">\n            <div class=\"checkbox-item\">\n              <input type=\"checkbox\" id=\"autoSuggestWithdrawals\" formControlName=\"autoSuggestWithdrawals\">\n              <label for=\"autoSuggestWithdrawals\">Suggérer automatiquement les retraits</label>\n            </div>\n          </div>\n          \n          <div class=\"form-group\">\n            <label for=\"minWithdrawalAmount\">Montant minimum de retrait</label>\n            <input \n              type=\"number\" \n              id=\"minWithdrawalAmount\" \n              formControlName=\"minWithdrawalAmount\"\n              class=\"form-control\"\n              [ngClass]=\"{'invalid': withdrawalRulesForm.get('minWithdrawalAmount')?.invalid && withdrawalRulesForm.get('minWithdrawalAmount')?.touched}\"\n            >\n            <div class=\"error-message\" *ngIf=\"withdrawalRulesForm.get('minWithdrawalAmount')?.invalid && withdrawalRulesForm.get('minWithdrawalAmount')?.touched\">\n              Le montant doit être positif ou nul.\n            </div>\n          </div>\n          \n          <div class=\"form-group\">\n            <label for=\"keepPercentageOfProfit\">Pourcentage des profits à conserver</label>\n            <div class=\"range-input-container\">\n              <input \n                type=\"range\" \n                id=\"keepPercentageOfProfit\" \n                formControlName=\"keepPercentageOfProfit\"\n                min=\"0\"\n                max=\"100\"\n                step=\"5\"\n                class=\"range-input\"\n              >\n              <span class=\"range-value\">{{ withdrawalRulesForm.get('keepPercentageOfProfit')?.value }}%</span>\n            </div>\n            <div class=\"help-text\">\n              Pourcentage des profits à conserver dans le compte après avoir atteint l'objectif.\n            </div>\n          </div>\n          \n          <div class=\"form-actions\">\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"withdrawalRulesForm.invalid\">Enregistrer</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}