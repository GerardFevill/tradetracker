{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AppComponent = class AppComponent {\n  constructor() {\n    this.title = 'TradeTracker';\n    this.darkMode = false;\n  }\n  ngOnInit() {\n    // Check if dark mode preference exists in local storage\n    const storedDarkMode = localStorage.getItem('darkMode');\n    if (storedDarkMode) {\n      this.darkMode = storedDarkMode === 'true';\n    } else {\n      // Check if user prefers dark mode at the OS level\n      const prefersDarkMode = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n      this.darkMode = prefersDarkMode;\n    }\n  }\n  toggleDarkMode() {\n    this.darkMode = !this.darkMode;\n    localStorage.setItem('darkMode', this.darkMode.toString());\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"names":["Component","AppComponent","constructor","title","darkMode","ngOnInit","storedDarkMode","localStorage","getItem","prefersDarkMode","window","matchMedia","matches","toggleDarkMode","setItem","toString","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/vagrant/workspace/windsurf/tradetracker/frontend-tradetracker/src/app/app.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'TradeTracker';\n  darkMode = false;\n\n  ngOnInit(): void {\n    // Check if dark mode preference exists in local storage\n    const storedDarkMode = localStorage.getItem('darkMode');\n    if (storedDarkMode) {\n      this.darkMode = storedDarkMode === 'true';\n    } else {\n      // Check if user prefers dark mode at the OS level\n      const prefersDarkMode = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n      this.darkMode = prefersDarkMode;\n    }\n  }\n\n  toggleDarkMode(): void {\n    this.darkMode = !this.darkMode;\n    localStorage.setItem('darkMode', this.darkMode.toString());\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAOjD,IAAaC,YAAY,GAAzB,MAAaA,YAAY;EAAzBC,YAAA;IACE,KAAAC,KAAK,GAAG,cAAc;IACtB,KAAAC,QAAQ,GAAG,KAAK;EAkBlB;EAhBEC,QAAQA,CAAA;IACN;IACA,MAAMC,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACvD,IAAIF,cAAc,EAAE;MAClB,IAAI,CAACF,QAAQ,GAAGE,cAAc,KAAK,MAAM;KAC1C,MAAM;MACL;MACA,MAAMG,eAAe,GAAGC,MAAM,CAACC,UAAU,IAAID,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;MACtG,IAAI,CAACR,QAAQ,GAAGK,eAAe;;EAEnC;EAEAI,cAAcA,CAAA;IACZ,IAAI,CAACT,QAAQ,GAAG,CAAC,IAAI,CAACA,QAAQ;IAC9BG,YAAY,CAACO,OAAO,CAAC,UAAU,EAAE,IAAI,CAACV,QAAQ,CAACW,QAAQ,EAAE,CAAC;EAC5D;CACD;AApBYd,YAAY,GAAAe,UAAA,EALxBhB,SAAS,CAAC;EACTiB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,C,EACWlB,YAAY,CAoBxB;SApBYA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}