{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/account.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction AddAccountComponent_div_12_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Le nom est requis.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddAccountComponent_div_12_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Le nom doit contenir au moins 3 caract\\u00E8res.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddAccountComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtemplate(1, AddAccountComponent_div_12_span_1_Template, 2, 0, \"span\", 28);\n    i0.ɵɵtemplate(2, AddAccountComponent_div_12_span_2_Template, 2, 0, \"span\", 28);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.accountForm.get(\"name\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.accountForm.get(\"name\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"minlength\"]);\n  }\n}\nfunction AddAccountComponent_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const broker_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", broker_r9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(broker_r9);\n  }\n}\nfunction AddAccountComponent_div_18_div_4_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Le nom du broker est requis.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddAccountComponent_div_18_div_4_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Le nom du broker doit contenir au moins 2 caract\\u00E8res.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddAccountComponent_div_18_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtemplate(1, AddAccountComponent_div_18_div_4_span_1_Template, 2, 0, \"span\", 28);\n    i0.ɵɵtemplate(2, AddAccountComponent_div_18_div_4_span_2_Template, 2, 0, \"span\", 28);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r10.accountForm.get(\"otherBroker\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r10.accountForm.get(\"otherBroker\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"minlength\"]);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"invalid\": a0\n  };\n};\nfunction AddAccountComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"label\", 30);\n    i0.ɵɵtext(2, \"Nom du broker *\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 31);\n    i0.ɵɵtemplate(4, AddAccountComponent_div_18_div_4_Template, 3, 2, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c0, ((tmp_0_0 = ctx_r2.accountForm.get(\"otherBroker\")) == null ? null : tmp_0_0.invalid) && ((tmp_0_0 = ctx_r2.accountForm.get(\"otherBroker\")) == null ? null : tmp_0_0.touched)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r2.accountForm.get(\"otherBroker\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx_r2.accountForm.get(\"otherBroker\")) == null ? null : tmp_1_0.touched));\n  }\n}\nfunction AddAccountComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵelement(1, \"input\", 33);\n    i0.ɵɵelementStart(2, \"label\", 34);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const currency_r13 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", \"currency-\" + currency_r13)(\"value\", currency_r13);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", \"currency-\" + currency_r13);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(currency_r13);\n  }\n}\nfunction AddAccountComponent_div_29_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Le solde est requis.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddAccountComponent_div_29_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Le solde doit \\u00EAtre positif ou nul.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddAccountComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtemplate(1, AddAccountComponent_div_29_span_1_Template, 2, 0, \"span\", 28);\n    i0.ɵɵtemplate(2, AddAccountComponent_div_29_span_2_Template, 2, 0, \"span\", 28);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r4.accountForm.get(\"currentBalance\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r4.accountForm.get(\"currentBalance\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"min\"]);\n  }\n}\nfunction AddAccountComponent_div_34_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"L'objectif est requis.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddAccountComponent_div_34_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"L'objectif doit \\u00EAtre positif ou nul.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddAccountComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtemplate(1, AddAccountComponent_div_34_span_1_Template, 2, 0, \"span\", 28);\n    i0.ɵɵtemplate(2, AddAccountComponent_div_34_span_2_Template, 2, 0, \"span\", 28);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r5.accountForm.get(\"targetBalance\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r5.accountForm.get(\"targetBalance\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"min\"]);\n  }\n}\nfunction AddAccountComponent_div_39_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Le seuil est requis.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddAccountComponent_div_39_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Le seuil doit \\u00EAtre positif ou nul.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddAccountComponent_div_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtemplate(1, AddAccountComponent_div_39_span_1_Template, 2, 0, \"span\", 28);\n    i0.ɵɵtemplate(2, AddAccountComponent_div_39_span_2_Template, 2, 0, \"span\", 28);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r6.accountForm.get(\"withdrawalThreshold\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r6.accountForm.get(\"withdrawalThreshold\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"min\"]);\n  }\n}\nclass AddAccountComponent {\n  constructor(fb, accountService, router) {\n    this.fb = fb;\n    this.accountService = accountService;\n    this.router = router;\n    this.currencies = ['USD', 'EUR'];\n    this.brokers = ['Roboforex', 'IC Markets', 'Other'];\n  }\n  ngOnInit() {\n    this.initForm();\n  }\n  initForm() {\n    this.accountForm = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(3)]],\n      broker: ['Roboforex', Validators.required],\n      currency: ['USD', Validators.required],\n      currentBalance: [0, [Validators.required, Validators.min(0)]],\n      targetBalance: [0, [Validators.required, Validators.min(0)]],\n      withdrawalThreshold: [0, [Validators.required, Validators.min(0)]],\n      otherBroker: ['']\n    });\n    // Watch for broker changes to handle 'Other' option\n    this.accountForm.get('broker')?.valueChanges.subscribe(value => {\n      const otherBrokerControl = this.accountForm.get('otherBroker');\n      if (value === 'Other') {\n        otherBrokerControl?.setValidators([Validators.required, Validators.minLength(2)]);\n      } else {\n        otherBrokerControl?.clearValidators();\n      }\n      otherBrokerControl?.updateValueAndValidity();\n    });\n  }\n  onSubmit() {\n    if (this.accountForm.invalid) return;\n    const formValue = this.accountForm.value;\n    // Handle 'Other' broker\n    let broker = formValue.broker;\n    if (broker === 'Other' && formValue.otherBroker) {\n      broker = formValue.otherBroker;\n    }\n    const newAccount = {\n      name: formValue.name,\n      broker,\n      currency: formValue.currency,\n      currentBalance: formValue.currentBalance,\n      targetBalance: formValue.targetBalance,\n      withdrawalThreshold: formValue.withdrawalThreshold,\n      totalDeposits: formValue.currentBalance,\n      totalWithdrawals: 0\n    };\n    this.accountService.createAccount(newAccount).subscribe(account => {\n      this.router.navigate(['/accounts', account.id]);\n    });\n  }\n  cancel() {\n    this.router.navigate(['/accounts']);\n  }\n  static {\n    this.ɵfac = function AddAccountComponent_Factory(t) {\n      return new (t || AddAccountComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AccountService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddAccountComponent,\n      selectors: [[\"app-add-account\"]],\n      decls: 47,\n      vars: 21,\n      consts: [[1, \"add-account-container\"], [1, \"header\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"form-container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"for\", \"broker\"], [\"id\", \"broker\", \"formControlName\", \"broker\", 1, \"form-control\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"form-group\", 4, \"ngIf\"], [\"for\", \"currency\"], [1, \"currency-selector\"], [\"class\", \"currency-option\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-row\"], [\"for\", \"currentBalance\"], [\"type\", \"number\", \"id\", \"currentBalance\", \"formControlName\", \"currentBalance\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"targetBalance\"], [\"type\", \"number\", \"id\", \"targetBalance\", \"formControlName\", \"targetBalance\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"withdrawalThreshold\"], [\"type\", \"number\", \"id\", \"withdrawalThreshold\", \"formControlName\", \"withdrawalThreshold\", 1, \"form-control\", 3, \"ngClass\"], [1, \"help-text\"], [1, \"form-actions\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"error-message\"], [4, \"ngIf\"], [3, \"value\"], [\"for\", \"otherBroker\"], [\"type\", \"text\", \"id\", \"otherBroker\", \"formControlName\", \"otherBroker\", 1, \"form-control\", 3, \"ngClass\"], [1, \"currency-option\"], [\"type\", \"radio\", \"formControlName\", \"currency\", 3, \"id\", \"value\"], [1, \"currency-label\", 3, \"for\"]],\n      template: function AddAccountComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n          i0.ɵɵtext(3, \"Ajouter un Compte de Trading\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"button\", 2);\n          i0.ɵɵlistener(\"click\", function AddAccountComponent_Template_button_click_4_listener() {\n            return ctx.cancel();\n          });\n          i0.ɵɵtext(5, \"Annuler\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"div\", 3)(7, \"form\", 4);\n          i0.ɵɵlistener(\"ngSubmit\", function AddAccountComponent_Template_form_ngSubmit_7_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(8, \"div\", 5)(9, \"label\", 6);\n          i0.ɵɵtext(10, \"Nom du compte *\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"input\", 7);\n          i0.ɵɵtemplate(12, AddAccountComponent_div_12_Template, 3, 2, \"div\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"div\", 5)(14, \"label\", 9);\n          i0.ɵɵtext(15, \"Broker *\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"select\", 10);\n          i0.ɵɵtemplate(17, AddAccountComponent_option_17_Template, 2, 2, \"option\", 11);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(18, AddAccountComponent_div_18_Template, 5, 4, \"div\", 12);\n          i0.ɵɵelementStart(19, \"div\", 5)(20, \"label\", 13);\n          i0.ɵɵtext(21, \"Devise *\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"div\", 14);\n          i0.ɵɵtemplate(23, AddAccountComponent_div_23_Template, 4, 4, \"div\", 15);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(24, \"div\", 16)(25, \"div\", 5)(26, \"label\", 17);\n          i0.ɵɵtext(27, \"Solde actuel *\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(28, \"input\", 18);\n          i0.ɵɵtemplate(29, AddAccountComponent_div_29_Template, 3, 2, \"div\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(30, \"div\", 5)(31, \"label\", 19);\n          i0.ɵɵtext(32, \"Objectif *\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(33, \"input\", 20);\n          i0.ɵɵtemplate(34, AddAccountComponent_div_34_Template, 3, 2, \"div\", 8);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(35, \"div\", 5)(36, \"label\", 21);\n          i0.ɵɵtext(37, \"Seuil de retrait *\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(38, \"input\", 22);\n          i0.ɵɵtemplate(39, AddAccountComponent_div_39_Template, 3, 2, \"div\", 8);\n          i0.ɵɵelementStart(40, \"div\", 23);\n          i0.ɵɵtext(41, \" Lorsque le solde d\\u00E9passe ce seuil, le syst\\u00E8me sugg\\u00E9rera un retrait. \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(42, \"div\", 24)(43, \"button\", 25);\n          i0.ɵɵlistener(\"click\", function AddAccountComponent_Template_button_click_43_listener() {\n            return ctx.cancel();\n          });\n          i0.ɵɵtext(44, \"Annuler\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(45, \"button\", 26);\n          i0.ɵɵtext(46, \"Cr\\u00E9er le compte\");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          let tmp_2_0;\n          let tmp_4_0;\n          let tmp_6_0;\n          let tmp_7_0;\n          let tmp_8_0;\n          let tmp_9_0;\n          let tmp_10_0;\n          let tmp_11_0;\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"formGroup\", ctx.accountForm);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c0, ((tmp_1_0 = ctx.accountForm.get(\"name\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.accountForm.get(\"name\")) == null ? null : tmp_1_0.touched)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.accountForm.get(\"name\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.accountForm.get(\"name\")) == null ? null : tmp_2_0.touched));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngForOf\", ctx.brokers);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.accountForm.get(\"broker\")) == null ? null : tmp_4_0.value) === \"Other\");\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngForOf\", ctx.currencies);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c0, ((tmp_6_0 = ctx.accountForm.get(\"currentBalance\")) == null ? null : tmp_6_0.invalid) && ((tmp_6_0 = ctx.accountForm.get(\"currentBalance\")) == null ? null : tmp_6_0.touched)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_7_0 = ctx.accountForm.get(\"currentBalance\")) == null ? null : tmp_7_0.invalid) && ((tmp_7_0 = ctx.accountForm.get(\"currentBalance\")) == null ? null : tmp_7_0.touched));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(17, _c0, ((tmp_8_0 = ctx.accountForm.get(\"targetBalance\")) == null ? null : tmp_8_0.invalid) && ((tmp_8_0 = ctx.accountForm.get(\"targetBalance\")) == null ? null : tmp_8_0.touched)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_9_0 = ctx.accountForm.get(\"targetBalance\")) == null ? null : tmp_9_0.invalid) && ((tmp_9_0 = ctx.accountForm.get(\"targetBalance\")) == null ? null : tmp_9_0.touched));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(19, _c0, ((tmp_10_0 = ctx.accountForm.get(\"withdrawalThreshold\")) == null ? null : tmp_10_0.invalid) && ((tmp_10_0 = ctx.accountForm.get(\"withdrawalThreshold\")) == null ? null : tmp_10_0.touched)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_11_0 = ctx.accountForm.get(\"withdrawalThreshold\")) == null ? null : tmp_11_0.invalid) && ((tmp_11_0 = ctx.accountForm.get(\"withdrawalThreshold\")) == null ? null : tmp_11_0.touched));\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"disabled\", ctx.accountForm.invalid);\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.RadioControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\".add-account-container[_ngcontent-%COMP%] {\\n  padding: 20px;\\n}\\n\\n.header[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-bottom: 20px;\\n}\\n\\n.header[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  margin: 0;\\n}\\n\\n.form-container[_ngcontent-%COMP%] {\\n  background-color: #fff;\\n  border-radius: 8px;\\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\\n  padding: 20px;\\n  max-width: 800px;\\n  margin: 0 auto;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n}\\n\\n.form-row[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: 1fr 1fr;\\n  gap: 20px;\\n}\\n\\n.form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  display: block;\\n  margin-bottom: 8px;\\n  font-weight: 500;\\n}\\n\\n.form-control[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 10px 12px;\\n  border: 1px solid #ced4da;\\n  border-radius: 4px;\\n  font-size: 16px;\\n}\\n\\n.form-control.invalid[_ngcontent-%COMP%] {\\n  border-color: #dc3545;\\n}\\n\\n.error-message[_ngcontent-%COMP%] {\\n  color: #dc3545;\\n  font-size: 14px;\\n  margin-top: 5px;\\n}\\n\\n.help-text[_ngcontent-%COMP%] {\\n  color: #6c757d;\\n  font-size: 14px;\\n  margin-top: 5px;\\n}\\n\\n.currency-selector[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 20px;\\n}\\n\\n.currency-option[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.currency-label[_ngcontent-%COMP%] {\\n  margin-left: 8px;\\n  cursor: pointer;\\n}\\n\\n.form-actions[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: flex-end;\\n  gap: 10px;\\n  margin-top: 30px;\\n}\\n\\n.btn[_ngcontent-%COMP%] {\\n  padding: 10px 20px;\\n  border-radius: 4px;\\n  font-weight: 500;\\n  cursor: pointer;\\n  border: none;\\n}\\n\\n.btn-primary[_ngcontent-%COMP%] {\\n  background-color: #007bff;\\n  color: white;\\n}\\n\\n.btn-secondary[_ngcontent-%COMP%] {\\n  background-color: #6c757d;\\n  color: white;\\n}\\n\\n.btn[_ngcontent-%COMP%]:disabled {\\n  opacity: 0.65;\\n  cursor: not-allowed;\\n}\\n\\n@media (max-width: 768px) {\\n  .header[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n    align-items: flex-start;\\n    gap: 10px;\\n  }\\n  \\n  .form-row[_ngcontent-%COMP%] {\\n    grid-template-columns: 1fr;\\n    gap: 0;\\n  }\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hZGQtYWNjb3VudC9hZGQtYWNjb3VudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsYUFBYTtFQUNiLDhCQUE4QjtFQUM5QixtQkFBbUI7RUFDbkIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsU0FBUztBQUNYOztBQUVBO0VBQ0Usc0JBQXNCO0VBQ3RCLGtCQUFrQjtFQUNsQix5Q0FBeUM7RUFDekMsYUFBYTtFQUNiLGdCQUFnQjtFQUNoQixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLDhCQUE4QjtFQUM5QixTQUFTO0FBQ1g7O0FBRUE7RUFDRSxjQUFjO0VBQ2Qsa0JBQWtCO0VBQ2xCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIseUJBQXlCO0VBQ3pCLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsY0FBYztFQUNkLGVBQWU7RUFDZixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsY0FBYztFQUNkLGVBQWU7RUFDZixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLFNBQVM7QUFDWDs7QUFFQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGFBQWE7RUFDYix5QkFBeUI7RUFDekIsU0FBUztFQUNULGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGVBQWU7RUFDZixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsWUFBWTtBQUNkOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRTtJQUNFLHNCQUFzQjtJQUN0Qix1QkFBdUI7SUFDdkIsU0FBUztFQUNYOztFQUVBO0lBQ0UsMEJBQTBCO0lBQzFCLE1BQU07RUFDUjtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLmFkZC1hY2NvdW50LWNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDIwcHg7XG59XG5cbi5oZWFkZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbi5oZWFkZXIgaDIge1xuICBtYXJnaW46IDA7XG59XG5cbi5mb3JtLWNvbnRhaW5lciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgYm94LXNoYWRvdzogMCAycHggMTBweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIG1heC13aWR0aDogODAwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4uZm9ybS1ncm91cCB7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbi5mb3JtLXJvdyB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcbiAgZ2FwOiAyMHB4O1xufVxuXG4uZm9ybS1ncm91cCBsYWJlbCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tYm90dG9tOiA4cHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG5cbi5mb3JtLWNvbnRyb2wge1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMTBweCAxMnB4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjY2VkNGRhO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cblxuLmZvcm0tY29udHJvbC5pbnZhbGlkIHtcbiAgYm9yZGVyLWNvbG9yOiAjZGMzNTQ1O1xufVxuXG4uZXJyb3ItbWVzc2FnZSB7XG4gIGNvbG9yOiAjZGMzNTQ1O1xuICBmb250LXNpemU6IDE0cHg7XG4gIG1hcmdpbi10b3A6IDVweDtcbn1cblxuLmhlbHAtdGV4dCB7XG4gIGNvbG9yOiAjNmM3NTdkO1xuICBmb250LXNpemU6IDE0cHg7XG4gIG1hcmdpbi10b3A6IDVweDtcbn1cblxuLmN1cnJlbmN5LXNlbGVjdG9yIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZ2FwOiAyMHB4O1xufVxuXG4uY3VycmVuY3ktb3B0aW9uIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmN1cnJlbmN5LWxhYmVsIHtcbiAgbWFyZ2luLWxlZnQ6IDhweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uZm9ybS1hY3Rpb25zIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgZ2FwOiAxMHB4O1xuICBtYXJnaW4tdG9wOiAzMHB4O1xufVxuXG4uYnRuIHtcbiAgcGFkZGluZzogMTBweCAyMHB4O1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYm9yZGVyOiBub25lO1xufVxuXG4uYnRuLXByaW1hcnkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5idG4tc2Vjb25kYXJ5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzZjNzU3ZDtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uYnRuOmRpc2FibGVkIHtcbiAgb3BhY2l0eTogMC42NTtcbiAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5oZWFkZXIge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gICAgZ2FwOiAxMHB4O1xuICB9XG4gIFxuICAuZm9ybS1yb3cge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xuICAgIGdhcDogMDtcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}\nexport { AddAccountComponent };","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","AddAccountComponent_div_12_span_1_Template","AddAccountComponent_div_12_span_2_Template","ɵɵadvance","ɵɵproperty","tmp_0_0","ctx_r0","accountForm","get","errors","tmp_1_0","broker_r9","ɵɵtextInterpolate","AddAccountComponent_div_18_div_4_span_1_Template","AddAccountComponent_div_18_div_4_span_2_Template","ctx_r10","ɵɵelement","AddAccountComponent_div_18_div_4_Template","ɵɵpureFunction1","_c0","ctx_r2","invalid","touched","currency_r13","AddAccountComponent_div_29_span_1_Template","AddAccountComponent_div_29_span_2_Template","ctx_r4","AddAccountComponent_div_34_span_1_Template","AddAccountComponent_div_34_span_2_Template","ctx_r5","AddAccountComponent_div_39_span_1_Template","AddAccountComponent_div_39_span_2_Template","ctx_r6","AddAccountComponent","constructor","fb","accountService","router","currencies","brokers","ngOnInit","initForm","group","name","required","minLength","broker","currency","currentBalance","min","targetBalance","withdrawalThreshold","otherBroker","valueChanges","subscribe","value","otherBrokerControl","setValidators","clearValidators","updateValueAndValidity","onSubmit","formValue","newAccount","totalDeposits","totalWithdrawals","createAccount","account","navigate","id","cancel","ɵɵdirectiveInject","i1","FormBuilder","i2","AccountService","i3","Router","selectors","decls","vars","consts","template","AddAccountComponent_Template","rf","ctx","ɵɵlistener","AddAccountComponent_Template_button_click_4_listener","AddAccountComponent_Template_form_ngSubmit_7_listener","AddAccountComponent_div_12_Template","AddAccountComponent_option_17_Template","AddAccountComponent_div_18_Template","AddAccountComponent_div_23_Template","AddAccountComponent_div_29_Template","AddAccountComponent_div_34_Template","AddAccountComponent_div_39_Template","AddAccountComponent_Template_button_click_43_listener","tmp_2_0","tmp_4_0","tmp_6_0","tmp_7_0","tmp_8_0","tmp_9_0","tmp_10_0","tmp_11_0"],"sources":["/home/vagrant/workspace/windsurf/tradetracker/frontend-tradetracker/src/app/components/add-account/add-account.component.ts","/home/vagrant/workspace/windsurf/tradetracker/frontend-tradetracker/src/app/components/add-account/add-account.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AccountService } from '../../services/account.service';\nimport { Broker, Currency } from '../../models/account.model';\n\n@Component({\n  selector: 'app-add-account',\n  templateUrl: './add-account.component.html',\n  styleUrls: ['./add-account.component.css']\n})\nexport class AddAccountComponent implements OnInit {\n  accountForm!: FormGroup;\n  currencies: Currency[] = ['USD', 'EUR'];\n  brokers: Broker[] = ['Roboforex', 'IC Markets', 'Other'];\n  \n  constructor(\n    private fb: FormBuilder,\n    private accountService: AccountService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n  \n  private initForm(): void {\n    this.accountForm = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(3)]],\n      broker: ['Roboforex', Validators.required],\n      currency: ['USD', Validators.required],\n      currentBalance: [0, [Validators.required, Validators.min(0)]],\n      targetBalance: [0, [Validators.required, Validators.min(0)]],\n      withdrawalThreshold: [0, [Validators.required, Validators.min(0)]],\n      otherBroker: ['']\n    });\n    \n    // Watch for broker changes to handle 'Other' option\n    this.accountForm.get('broker')?.valueChanges.subscribe(value => {\n      const otherBrokerControl = this.accountForm.get('otherBroker');\n      \n      if (value === 'Other') {\n        otherBrokerControl?.setValidators([Validators.required, Validators.minLength(2)]);\n      } else {\n        otherBrokerControl?.clearValidators();\n      }\n      \n      otherBrokerControl?.updateValueAndValidity();\n    });\n  }\n  \n  onSubmit(): void {\n    if (this.accountForm.invalid) return;\n    \n    const formValue = this.accountForm.value;\n    \n    // Handle 'Other' broker\n    let broker = formValue.broker;\n    if (broker === 'Other' && formValue.otherBroker) {\n      broker = formValue.otherBroker;\n    }\n    \n    const newAccount = {\n      name: formValue.name,\n      broker,\n      currency: formValue.currency,\n      currentBalance: formValue.currentBalance,\n      targetBalance: formValue.targetBalance,\n      withdrawalThreshold: formValue.withdrawalThreshold,\n      totalDeposits: formValue.currentBalance, // Initial deposit equals current balance\n      totalWithdrawals: 0\n    };\n    \n    this.accountService.createAccount(newAccount).subscribe(account => {\n      this.router.navigate(['/accounts', account.id]);\n    });\n  }\n  \n  cancel(): void {\n    this.router.navigate(['/accounts']);\n  }\n}\n","<div class=\"add-account-container\">\n  <div class=\"header\">\n    <h2>Ajouter un Compte de Trading</h2>\n    <button class=\"btn btn-secondary\" (click)=\"cancel()\">Annuler</button>\n  </div>\n  \n  <div class=\"form-container\">\n    <form [formGroup]=\"accountForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n        <label for=\"name\">Nom du compte *</label>\n        <input \n          type=\"text\" \n          id=\"name\" \n          formControlName=\"name\"\n          class=\"form-control\"\n          [ngClass]=\"{'invalid': accountForm.get('name')?.invalid && accountForm.get('name')?.touched}\"\n        >\n        <div class=\"error-message\" *ngIf=\"accountForm.get('name')?.invalid && accountForm.get('name')?.touched\">\n          <span *ngIf=\"accountForm.get('name')?.errors?.['required']\">Le nom est requis.</span>\n          <span *ngIf=\"accountForm.get('name')?.errors?.['minlength']\">Le nom doit contenir au moins 3 caractères.</span>\n        </div>\n      </div>\n      \n      <div class=\"form-group\">\n        <label for=\"broker\">Broker *</label>\n        <select \n          id=\"broker\" \n          formControlName=\"broker\"\n          class=\"form-control\"\n        >\n          <option *ngFor=\"let broker of brokers\" [value]=\"broker\">{{ broker }}</option>\n        </select>\n      </div>\n      \n      <div class=\"form-group\" *ngIf=\"accountForm.get('broker')?.value === 'Other'\">\n        <label for=\"otherBroker\">Nom du broker *</label>\n        <input \n          type=\"text\" \n          id=\"otherBroker\" \n          formControlName=\"otherBroker\"\n          class=\"form-control\"\n          [ngClass]=\"{'invalid': accountForm.get('otherBroker')?.invalid && accountForm.get('otherBroker')?.touched}\"\n        >\n        <div class=\"error-message\" *ngIf=\"accountForm.get('otherBroker')?.invalid && accountForm.get('otherBroker')?.touched\">\n          <span *ngIf=\"accountForm.get('otherBroker')?.errors?.['required']\">Le nom du broker est requis.</span>\n          <span *ngIf=\"accountForm.get('otherBroker')?.errors?.['minlength']\">Le nom du broker doit contenir au moins 2 caractères.</span>\n        </div>\n      </div>\n      \n      <div class=\"form-group\">\n        <label for=\"currency\">Devise *</label>\n        <div class=\"currency-selector\">\n          <div *ngFor=\"let currency of currencies\" class=\"currency-option\">\n            <input \n              type=\"radio\" \n              [id]=\"'currency-' + currency\" \n              formControlName=\"currency\"\n              [value]=\"currency\"\n            >\n            <label [for]=\"'currency-' + currency\" class=\"currency-label\">{{ currency }}</label>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <label for=\"currentBalance\">Solde actuel *</label>\n          <input \n            type=\"number\" \n            id=\"currentBalance\" \n            formControlName=\"currentBalance\"\n            class=\"form-control\"\n            [ngClass]=\"{'invalid': accountForm.get('currentBalance')?.invalid && accountForm.get('currentBalance')?.touched}\"\n          >\n          <div class=\"error-message\" *ngIf=\"accountForm.get('currentBalance')?.invalid && accountForm.get('currentBalance')?.touched\">\n            <span *ngIf=\"accountForm.get('currentBalance')?.errors?.['required']\">Le solde est requis.</span>\n            <span *ngIf=\"accountForm.get('currentBalance')?.errors?.['min']\">Le solde doit être positif ou nul.</span>\n          </div>\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"targetBalance\">Objectif *</label>\n          <input \n            type=\"number\" \n            id=\"targetBalance\" \n            formControlName=\"targetBalance\"\n            class=\"form-control\"\n            [ngClass]=\"{'invalid': accountForm.get('targetBalance')?.invalid && accountForm.get('targetBalance')?.touched}\"\n          >\n          <div class=\"error-message\" *ngIf=\"accountForm.get('targetBalance')?.invalid && accountForm.get('targetBalance')?.touched\">\n            <span *ngIf=\"accountForm.get('targetBalance')?.errors?.['required']\">L'objectif est requis.</span>\n            <span *ngIf=\"accountForm.get('targetBalance')?.errors?.['min']\">L'objectif doit être positif ou nul.</span>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"form-group\">\n        <label for=\"withdrawalThreshold\">Seuil de retrait *</label>\n        <input \n          type=\"number\" \n          id=\"withdrawalThreshold\" \n          formControlName=\"withdrawalThreshold\"\n          class=\"form-control\"\n          [ngClass]=\"{'invalid': accountForm.get('withdrawalThreshold')?.invalid && accountForm.get('withdrawalThreshold')?.touched}\"\n        >\n        <div class=\"error-message\" *ngIf=\"accountForm.get('withdrawalThreshold')?.invalid && accountForm.get('withdrawalThreshold')?.touched\">\n          <span *ngIf=\"accountForm.get('withdrawalThreshold')?.errors?.['required']\">Le seuil est requis.</span>\n          <span *ngIf=\"accountForm.get('withdrawalThreshold')?.errors?.['min']\">Le seuil doit être positif ou nul.</span>\n        </div>\n        <div class=\"help-text\">\n          Lorsque le solde dépasse ce seuil, le système suggérera un retrait.\n        </div>\n      </div>\n      \n      <div class=\"form-actions\">\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"cancel()\">Annuler</button>\n        <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"accountForm.invalid\">Créer le compte</button>\n      </div>\n    </form>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}